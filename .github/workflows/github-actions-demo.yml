#name: GitHub Actions Demo
#run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
#on: [push]
#jobs:
#  Explore-GitHub-Actions:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
#      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
#      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#      - name: List files in the repository
#        run: |
#          ls ${{ github.workspace }}
#      - run: echo "üçè This job's status is ${{ job.status }}."


# Sample workflow to access AWS resources when workflow is tied to branch
# The workflow Creates static website using aws s3
name: AWS example workflow
on:
  push
env:
  BUCKET_NAME : "brr-test-1"
  AWS_REGION : "aws-east-1"
# permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout
jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Build with Gradle
        run: ./gradlew build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@4.2.1
        with:
          role-to-assume: arn:aws:iam::998530368070:role/github_oidc_assume_role
          role-session-name: samplerolesession
          aws-region: ${{ env.AWS_REGION }}
      # Upload a file to AWS s3
      - name: Copy jar to s3
        run: |
          aws s3 cp ./build/libs/*.jar s3://${{ env.BUCKET_NAME }}/

# test
